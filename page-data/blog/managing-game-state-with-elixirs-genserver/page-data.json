{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/blog/managing-game-state-with-elixirs-genserver/","result":{"data":{"post":{"html":"<p>I've recently been working a project of mine called <a href=\"https://github.com/JustDrawIt/drawit/\" target=\"_blank\" rel=\"noopener noreferrer\">Draw It!</a> It's a web-based, multiplayer game where a random player is assigned a word they must draw, while everyone else must figure out what the word is.</p>\n<p>Originally, as an MVP, the main game logic was implemented with Node and good ol' <code>setTimeout</code>, however I recently discovered <a href=\"https://elixir-lang.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Elixir</a> and all the great tools it comes with out of the box for dealing with asynchronous and concurrent systems. I had some spare time and I wanted to get my hands dirty using this tool, so I decided to update the game logic to use Elixir.</p>\n<p>I quickly discovered <a href=\"https://hexdocs.pm/elixir/GenServer.html\" target=\"_blank\" rel=\"noopener noreferrer\">GenServer</a>, a helpful abstraction for creating processes that can run code asynchronously and maintain state.</p>\n<p>First things first, we need a module that we can use for spinning up our game genservers. Let's call it <code>GameServer</code>:</p>\n<pre class=\"grvsc-container night-owl\" data-language=\"elixir\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"1\"></span><span class=\"grvsc-source\"><span class=\"mtk3 mtki\">defmodule</span><span class=\"mtk1\"> DrawIt.GameServer </span><span class=\"mtk3 mtki\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"2\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk9\">use</span><span class=\"mtk1\"> </span><span class=\"mtk7\">GenServer</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"3\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"4\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\">#</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"5\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\"> Client</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"6\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\">#</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"7\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"8\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">start_link</span><span class=\"mtk1\">(options) </span><span class=\"mtk3 mtki\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"9\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk7\">GenServer</span><span class=\"mtk1\">.start_link(</span><span class=\"mtk9\">__MODULE__</span><span class=\"mtk1\">, options)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"10\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3 mtki\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"11\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"12\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\">#</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"13\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\"> Server</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"14\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk6\">#</span><span class=\"mtk6 mtki\">#</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"15\"></span><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"16\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk5\">@impl</span><span class=\"mtk1\"> </span><span class=\"mtk7\">true</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"17\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3 mtki\">def</span><span class=\"mtk1\"> </span><span class=\"mtk5 mtki\">init</span><span class=\"mtk1\">(options </span><span class=\"mtk9\">\\\\</span><span class=\"mtk1\"> []) </span><span class=\"mtk3 mtki\">do</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"18\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">    {</span><span class=\"mtk7\">:ok</span><span class=\"mtk1\">, %{}}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"19\"></span><span class=\"grvsc-source\"><span class=\"mtk1\">  </span><span class=\"mtk3 mtki\">end</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-gutter-pad\"></span><span class=\"grvsc-gutter grvsc-line-number\" aria-hidden=\"true\" data-content=\"20\"></span><span class=\"grvsc-source\"><span class=\"mtk3 mtki\">end</span></span></span></code></pre>\n<p>GenServers are typically divided into two sections: Client and Server. The server section includes methods that implement the various behaviors that are used to build your GenServer. The client methods act as abstractions for invoking our server methods.</p>\n<p>This first example is pretty bare-bones.</p>\n<ul>\n<li>We've created a helper method for clients to easily start a new game server via <code>GameServer.start_link/1</code>.</li>\n<li>We've implemented the <code>init/1</code> behavior which will be invoked whenever a new game server is created. Passing an empty map (<code>%{}</code>) as the initial state.</li>\n</ul>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .night-owl {\n    background-color: #011627;\n    color: #d6deeb;\n  }\n  .night-owl .mtki { font-style: italic; }\n  .night-owl .mtk3 { color: #C792EA; }\n  .night-owl .mtk1 { color: #D6DEEB; }\n  .night-owl .mtk9 { color: #7FDBCA; }\n  .night-owl .mtk7 { color: #82AAFF; }\n  .night-owl .mtk6 { color: #637777; }\n  .night-owl .mtk5 { color: #ADDB67; }\n  .night-owl .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n</style>","frontmatter":{"slug":"/managing-game-state-with-elixirs-genserver","title":"Managing game state with Elixirs GenServer","tags":["elixir"],"date_updated":null,"date_published":"2019-11-30T00:00:00.000Z","date_published_formatted":"November 30, 2019","date_updated_formatted":null},"fields":{"readingTime":{"text":"2 min read"}}}},"pageContext":{"slug":"/managing-game-state-with-elixirs-genserver","previous":{"fields":{"slug":"/blog/creating-a-vanilla-http-server-in-node-js/"},"frontmatter":{"slug":"/creating-a-vanilla-http-server-in-node-js","title":"Creating a Vanilla HTTP Server in Node.js","tags":["node","http"],"date_published":"2017-06-18T00:00:00.000Z","date_updated":"2020-06-01T00:00:00.000Z"}},"next":{"fields":{"slug":"/blog/exploring-blazor/"},"frontmatter":{"slug":"/exploring-blazor","title":"Exploring Blazor","tags":[".NET Core","blazor"],"date_published":"2019-11-30T00:00:00.000Z","date_updated":null}}}}}